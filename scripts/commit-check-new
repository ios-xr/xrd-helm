#!/bin/bash

set -e


# function cleanup()
# {
#     echo
#     echo "Cleaning up..."
#     if [[ -d $TMP_VENV ]]; then
#         rm -r "$TMP_VENV"
#     fi
# }

# trap cleanup EXIT


#=====================================================
# Run checks
#=====================================================

FAILURES=0

# Check version incerment
python3 -m pip install --upgrade pip
python3 -m pip install PyYAML

./scripts/check-dependency-version-increment

echo
echo "Running chart-testing (list-changed)"
DEFAULT_BRANCH="main"
changed=$(ct list-changed --target-branch $DEFAULT_BRANCH)
    if [[ -n "$changed" ]]; then
        echo "::set-output name=changed::true"
    fi

echo
echo "Running chart-testing (lint)"
ct lint --config .github/config/ct.yml --target-branch $DEFAULT_BRANCH

echo
echo "Running chart-testing (check-version-increment)"
ct lint --config .github/config/ct-version-increment.yml --target-branch $DEFAULT_BRANCH

# Build container for UT
docker build tests/ -t helm-tests

# Control Plane unit tests
docker run -v "$PWD/:/charts" helm-tests bats tests/ut/xrd-control-plane

# vRouter unit tests
docker run -v "$PWD/:/charts" helm-tests bats tests/ut/xrd-vrouter


echo
echo "Running shellcheck..."
if ! shellcheck scripts/*; then
    echo "Shellcheck failed, check output and fix issues." >&2
    FAILURES=$((FAILURES+1))
fi

# echo
# echo "Running tests..."
# if ! pytest; then
#     echo "Tests failed, check output and fix issues." >&2
#     FAILURES=$((FAILURES+1))
# fi


#=====================================================
# Final steps
#=====================================================

echo
if ((FAILURES > 0)); then
    echo "ERROR: There were $FAILURES failures"
    exit 1
else
    echo "SUCCESS: All passed!"
    exit 0
fi