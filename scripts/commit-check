#!/bin/bash

set -e

function cleanup()
{
    echo
    echo "Cleaning up..."
    if [[ -d $TMP_VENV ]]; then
        rm -r "$TMP_VENV"
    fi
}

trap cleanup EXIT

#=====================================================
# Run checks
#=====================================================

FAILURES=0

echo "Setting up python venv..."
TMP_VENV=$(mktemp -d -t venv.XXXXXX)
python3 -m venv "$TMP_VENV"
# shellcheck source=/dev/null
source "$TMP_VENV/bin/activate"
pip install --upgrade pip
pip install PyYAML

echo
echo "Running version-increment dependency check"
if ! ./scripts/check-dependency-version-increment; then
    echo "Version-increment dependency check failed, check output and fix issues." >&2
    FAILURES=$((FAILURES+1))
fi

# Install ct by pulling docker image

# echo
# echo "Running chart testing (list-changed)"
# DEFAULT_BRANCH="main"
# changed=$(ct list-changed --target-branch $DEFAULT_BRANCH)
#     if [[ -n "$changed" ]]; then
#         echo "::set-output name=changed::true"
#     fi

# echo
# echo "Running chart testing (lint)"
# if ! ct lint --config .github/config/ct.yml --target-branch $DEFAULT_BRANCH; then
#     echo "Chart testing (lint) failed, check output and fix issues." >&2
#     FAILURES=$((FAILURES+1))
# fi

# echo
# echo "Running chart testing (check-version-increment)"
# if ! ct lint --config .github/config/ct-version-increment.yml --target-branch $DEFAULT_BRANCH; then
#     echo "Chart testing (check-version-increment) failed, check output and fix issues." >&2
#     FAILURES=$((FAILURES+1))
# fi

echo
echo "Running shellcheck..."
if ! shellcheck scripts/{chart-releaser,commit-check}; then
    echo "Shellcheck failed, check output and fix issues." >&2
    FAILURES=$((FAILURES+1))
fi

# Build container for UT
docker build tests/ -t helm-tests --network host

echo
echo "Running Control Plane unit tests..."
if ! docker run -v "$PWD/:/charts" helm-tests bats tests/ut/xrd-control-plane; then
    echo "Control Plane unit tests failed, check output and fix issues." >&2
    FAILURES=$((FAILURES+1))
fi

echo
echo "Running vRouter unit tests..."
if ! docker run -v "$PWD/:/charts" helm-tests bats tests/ut/xrd-vrouter; then
    echo "vRouter unit tests failed, check output and fix issues." >&2
    FAILURES=$((FAILURES+1))
fi

#=====================================================
# Final steps
#=====================================================

echo
if ((FAILURES > 0)); then
    echo "ERROR: There were $FAILURES failures"
    exit 1
else
    echo "SUCCESS: All passed!"
    exit 0
fi